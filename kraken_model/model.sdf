<?xml version='1.0'?>
<sdf version='1.4'>
  <model name="kraken_model">
    <static>false</static>

    <link name='base_link'>
      <pose frame=''>0 0 0.2242718 0 0 0</pose>
      <inertial>
        <!--pose frame=''>-0.028177 0.00030116 0.018641 0 0 0</pose-->
        <mass>18.285</mass>
        <inertia>
          <ixx>0.53997</ixx>
          <ixy>0.002594</ixy>
          <ixz>0.013868</ixz>
          <iyy>2.0293</iyy>
          <iyz>-0.00043267</iyz>
          <izz>1.8878</izz>
        </inertia>
      </inertial>
      <visual name='base_link_visual'>
        <pose frame=''>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://kraken_model/meshes/base_link.STL</uri>
          </mesh>
        </geometry>
        <material>
          <!--colour>
            <rgba>12 120 12 1</rgba>
          </colour-->
        </material>
      </visual>
      <collision name='base_link_collision'>
        <pose frame=''>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://kraken_model/meshes/base_link.STL</uri>
          </mesh>
        </geometry>
      </collision>
    </link>

    <link name='thruster_surge_left'>
      <pose frame=''>-0.12579 0.17295 0.2472198 -1.5708 0 -3.1416</pose>
      <inertial>
        <!--pose frame=''>-0.03593 0.0010221 -3.6841E-05 0 0 0</pose-->
        <mass>0.27942</mass>
        <inertia>
          <ixx>0.00014697</ixx>
          <ixy>-2.2392E-05</ixy>
          <ixz>8.9545E-07</ixz>
          <iyy>0.00072689</iyy>
          <iyz>-3.6164E-07</iyz>
          <izz>0.00074014</izz>
        </inertia>
      </inertial>
      <visual name='thruster_surge_left_visual'>
        <pose frame=''>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://kraken_model/meshes/thruster_surge_left.STL</uri>
          </mesh>
        </geometry>
        <material>
          <!--colour>
            <rgba>12 120 12 1</rgba>
          </colour-->
        </material>
      </visual>
      <collision name='thruster_surge_left_collision'>
        <pose frame=''>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://kraken_model/meshes/thruster_surge_left.STL</uri>
          </mesh>
        </geometry>
      </collision>
    </link>
    <joint name="joint_thruster_surge_left" type="fixed">
      <parent>base_link</parent>
      <child>thruster_surge_left</child>
      <pose frame=''>0 0 0 0 0 0</pose>
      <axis>
        <xyz>0 0 0</xyz>
      </axis>
    </joint>

    <link name='thruster_surge_right'>
      <pose frame=''>-0.12579 -0.17295 0.2472198 -1.5708 0 -3.1416</pose>
      <inertial>
        <!--pose frame=''>-0.03593 0.0010221 -3.6841E-05 0 0 0</pose-->
        <mass>0.27942</mass>
        <inertia>
          <ixx>0.00014697</ixx>
          <ixy>-2.2392E-05</ixy>
          <ixz>8.9545E-07</ixz>
          <iyy>0.00072689</iyy>
          <iyz>-3.6164E-07</iyz>
          <izz>0.00074014</izz>
        </inertia>
      </inertial>
      <visual name='thruster_surge_right_visual'>
        <pose frame=''>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://kraken_model/meshes/thruster_surge_right.STL</uri>
          </mesh>
        </geometry>
        <material>
          <!--colour>
            <rgba>12 120 12 1</rgba>
          </colour-->
        </material>
      </visual>
      <collision name='thruster_surge_right_collision'>
        <pose frame=''>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://kraken_model/meshes/thruster_surge_right.STL</uri>
          </mesh>
        </geometry>
      </collision>
    </link>
    <joint name="joint_thruster_surge_right" type="fixed">
      <parent>base_link</parent>
      <child>thruster_surge_right</child>
      <pose frame=''>0 0 0 0 0 0</pose>
      <axis>
        <xyz>0 0 0</xyz>
      </axis>
    </joint>

    <link name='thruster_sway_front'>
      <pose frame=''>0.60287 -0.038552 0.1675538 3.1416 0 -1.5708</pose>
      <inertial>
        <!--pose frame=''>-0.03593 0.0010221 -3.6841E-05 0 0 0</pose-->
        <mass>0.27942</mass>
        <inertia>
          <ixx>0.00014697</ixx>
          <ixy>-2.2392E-05</ixy>
          <ixz>8.9545E-07</ixz>
          <iyy>0.00072689</iyy>
          <iyz>-3.6164E-07</iyz>
          <izz>0.00074014</izz>
        </inertia>
      </inertial>
      <visual name='thruster_sway_front_visual'>
        <pose frame=''>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://kraken_model/meshes/thruster_sway_front.STL</uri>
          </mesh>
        </geometry>
        <material>
          <!--colour>
            <rgba>12 120 12 1</rgba>
          </colour-->
        </material>
      </visual>
      <collision name='thruster_sway_front_collision'>
        <pose frame=''>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://kraken_model/meshes/thruster_sway_front.STL</uri>
          </mesh>
        </geometry>
      </collision>
    </link>
    <joint name="joint_thruster_sway_front" type="fixed">
      <parent>base_link</parent>
      <child>thruster_sway_front</child>
      <pose frame=''>0 0 0 0 0 0</pose>
      <axis>
        <xyz>0 0 0</xyz>
      </axis>
    </joint>

    <link name='thruster_sway_back'>
      <pose frame=''>-0.68846 -0.038552 0.1675538 0 0 -1.5708</pose>
      <inertial>
        <!--pose frame=''>-0.03593 0.0010221 -3.6841E-05 0 0 0</pose-->
        <mass>0.27942</mass>
        <inertia>
          <ixx>0.00014697</ixx>
          <ixy>-2.2392E-05</ixy>
          <ixz>8.9545E-07</ixz>
          <iyy>0.00072689</iyy>
          <iyz>-3.6164E-07</iyz>
          <izz>0.00074014</izz>
        </inertia>
      </inertial>
      <visual name='thruster_sway_back_visual'>
        <pose frame=''>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://kraken_model/meshes/thruster_sway_back.STL</uri>
          </mesh>
        </geometry>
        <material>
          <!--colour>
            <rgba>12 120 12 1</rgba>
          </colour-->
        </material>
      </visual>
      <collision name='thruster_sway_back_collision'>
        <pose frame=''>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://kraken_model/meshes/thruster_sway_back.STL</uri>
          </mesh>
        </geometry>
      </collision>
    </link>
    <joint name="joint_thruster_sway_back" type="fixed">
      <parent>base_link</parent>
      <child>thruster_sway_back</child>
      <pose frame=''>0 0 0 0 0 0</pose>
      <axis>
        <xyz>0 0 0</xyz>
      </axis>
    </joint>

    <link name='thruster_depth_back'>
      <pose frame=''>-0.52013 -0.0020519 0.1549928 0.084983 -1.5708 0</pose>
      <inertial>
        <!--pose frame=''>-0.03593 0.0010221 -3.6841E-05 0 0 0</pose-->
        <mass>0.27942</mass>
        <inertia>
          <ixx>0.00014697</ixx>
          <ixy>-2.2392E-05</ixy>
          <ixz>8.9545E-07</ixz>
          <iyy>0.00072689</iyy>
          <iyz>-3.6164E-07</iyz>
          <izz>0.00074014</izz>
        </inertia>
      </inertial>
      <visual name='thruster_depth_back_visual'>
        <pose frame=''>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://kraken_model/meshes/thruster_depth_back.STL</uri>
          </mesh>
        </geometry>
        <material>
          <!--colour>
            <rgba>12 120 12 1</rgba>
          </colour-->
        </material>
      </visual>
      <collision name='thruster_depth_back_collision'>
        <pose frame=''>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://kraken_model/meshes/thruster_depth_back.STL</uri>
          </mesh>
        </geometry>
      </collision>
    </link>
    <joint name="joint_thruster_depth_back" type="fixed">
      <parent>base_link</parent>
      <child>thruster_depth_back</child>
      <pose frame=''>0 0 0 0 0 0</pose>
      <axis>
        <xyz>0 0 0</xyz>
      </axis>
    </joint>

    <link name='thruster_depth_front'>
      <pose frame=''>0.434540624723199 0.00194813343016015 0.1549926841 3.05660929245613 -1.5707963267949 0</pose>
      <inertial>
        <!--pose frame=''>-0.03593 0.0010221 -3.6841E-05 0 0 0</pose-->
        <mass>0.27942</mass>
        <inertia>
          <ixx>0.00014697</ixx>
          <ixy>-2.2392E-05</ixy>
          <ixz>8.9545E-07</ixz>
          <iyy>0.00072689</iyy>
          <iyz>-3.6164E-07</iyz>
          <izz>0.00074014</izz>
        </inertia>
      </inertial>
      <visual name='thruster_depth_front_visual'>
        <pose frame=''>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://kraken_model/meshes/thruster_depth_front.STL</uri>
          </mesh>
        </geometry>
        <material>
          <!--colour>
            <rgba>12 120 12 1</rgba>
          </colour-->
        </material>
      </visual>
      <collision name='thruster_depth_front_collision'>
        <pose frame=''>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://kraken_model/meshes/thruster_depth_front.STL</uri>
          </mesh>
        </geometry>
      </collision>
    </link>
    <joint name="joint_thruster_depth_front" type="fixed">
      <parent>base_link</parent>
      <child>thruster_depth_front</child>
      <pose frame=''>0 0 0 0 0 0</pose>
      <axis>
        <xyz>0 0 0</xyz>
      </axis>
    </joint>

    <link name='front_camera'>
      <pose frame=''>0.50159 0.0010478 0.3225578 1.5708 0 1.5708</pose><!--1.5708 0 1.5708-->
      <inertial>
        <!--pose frame=''>-0.03593 0.0010221 -3.6841E-05 0 0 0</pose-->
        <mass>0.76015</mass>
        <inertia>
          <ixx>0.0044413</ixx><!---1.5708 -1.5708 0-->
          <ixy>-1.3816E-07</ixy>
          <ixz>-1.2382E-06</ixz>
          <iyy>0.0044479</iyy>
          <iyz>2.8356E-06</iyz>
          <izz>0.0008292</izz>
        </inertia>
      </inertial>
      <visual name='front_camera_visual'>
        <pose frame=''>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://kraken_model/meshes/front_camera.STL</uri>
          </mesh>
        </geometry>
        <material>
          <!--colour>
            <rgba>12 120 12 1</rgba>
          </colour-->
        </material>
      </visual>
      <collision name='front_camera_collision'>
        <pose frame=''>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://kraken_model/meshes/front_camera.STL</uri>
          </mesh>
        </geometry>
      </collision>

      <sensor type="camera" name="front_camera">
     <update_rate>30.0</update_rate>
     <camera name="front">
       <pose frame=''>0 0 0.127 4.7124 -1.5708 0</pose>
       <horizontal_fov>1.3962634</horizontal_fov>
       <image>
         <width>640</width>
         <height>480</height>
         <format>R8G8B8</format>
       </image>
       <clip>
         <near>0.02</near>
         <far>300</far>
       </clip>
       <noise>
         <type>gaussian</type>
         <!-- Noise is sampled independently per pixel on each frame.
              That pixel's noise value is added to each of its color
              channels, which at that point lie in the range [0,1]. -->
         <mean>0.0</mean>
         <stddev>0.007</stddev>
       </noise>
     </camera>
     <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
       <alwaysOn>true</alwaysOn>
       <updateRate>0.0</updateRate>
       <cameraName>kraken/front_camera</cameraName>
       <imageTopicName>image_raw</imageTopicName>
       <cameraInfoTopicName>image_info</cameraInfoTopicName>
       <frameName>front_camera</frameName>
       <hackBaseline>0.07</hackBaseline>
       <distortionK1>0.0</distortionK1>
       <distortionK2>0.0</distortionK2>
       <distortionK3>0.0</distortionK3>
       <distortionT1>0.0</distortionT1>
       <distortionT2>0.0</distortionT2>
     </plugin>
   </sensor>
    </link>
    <joint name="joint_front_camera" type="fixed">
      <parent>base_link</parent>
      <child>front_camera</child>
      <pose frame=''>0 0 0 0 0 0</pose><!---1.5708 -1.5708 0-->
      <axis>
        <xyz>0 0 0</xyz>
      </axis>
    </joint>

    <link name='bottom_camera'>
      <pose frame=''>0.3039 0.0026343 0.2017638 3.1416 0 -1.5708</pose>
      <inertial>
        <!--pose frame=''>-0.03593 0.0010221 -3.6841E-05 0 0 0</pose-->
        <mass>0.75357</mass>
        <inertia>
          <ixx>0.0041084</ixx>
          <ixy>-1.0367E-07</ixy>
          <ixz>9.3472E-07</ixz>
          <iyy>0.0041141</iyy>
          <iyz>-4.1311E-06</iyz>
          <izz>0.00089781</izz>
        </inertia>
      </inertial>
      <visual name='bottom_camera_visual'>
        <pose frame=''>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://kraken_model/meshes/bottom_camera.STL</uri>
          </mesh>
        </geometry>
        <material>
          <!--colour>
            <rgba>12 120 12 1</rgba>
          </colour-->
        </material>
      </visual>
      <collision name='bottom_camera_collision'>
        <pose frame=''>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://kraken_model/meshes/bottom_camera.STL</uri>
          </mesh>
        </geometry>
      </collision>
      <sensor type="camera" name="bottom_camera">
     <update_rate>30.0</update_rate>
     <camera name="bottom">
       <pose frame=''>0 0 0.127 1.5708 -1.5708 0</pose>
       <horizontal_fov>1.3962634</horizontal_fov>
       <image>
         <width>640</width>
         <height>480</height>
         <format>R8G8B8</format>
       </image>
       <clip>
         <near>0.02</near>
         <far>300</far>
       </clip>
       <noise>
         <type>gaussian</type>
         <!-- Noise is sampled independently per pixel on each frame.
              That pixel's noise value is added to each of its color
              channels, which at that point lie in the range [0,1]. -->
         <mean>0.0</mean>
         <stddev>0.007</stddev>
       </noise>
     </camera>
     <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
       <alwaysOn>true</alwaysOn>
       <updateRate>0.0</updateRate>
       <cameraName>kraken/bottom_camera</cameraName>
       <imageTopicName>image_raw</imageTopicName>
       <cameraInfoTopicName>image_info</cameraInfoTopicName>
       <frameName>bottom_camera</frameName>
       <hackBaseline>0.07</hackBaseline>
       <distortionK1>0.0</distortionK1>
       <distortionK2>0.0</distortionK2>
       <distortionK3>0.0</distortionK3>
       <distortionT1>0.0</distortionT1>
       <distortionT2>0.0</distortionT2>
     </plugin>
   </sensor>
    </link>
    <joint name="joint_bottom_camera" type="fixed">
      <parent>base_link</parent>
      <child>bottom_camera</child>
      <pose frame=''>0 0 0 0 0 0</pose>
      <axis>
        <xyz>0 0 0</xyz>
      </axis>
    </joint>

    <link name='DVL'>
      <pose frame=''>-0.063112 -0.01239 0.2336539 -1.5708 0 -2.7631</pose>
      <inertial>
        <!--pose frame=''>-0.03593 0.0010221 -3.6841E-05 0 0 0</pose-->
        <mass>1.676</mass>
        <inertia>
          <ixx>0.0057071</ixx>
          <ixy>-3.8911E-06</ixy>
          <ixz>8.2948E-11</ixz>
          <iyy>0.0026774</iyy>
          <iyz>-7.4438E-08</iyz>
          <izz>0.0057137</izz>
        </inertia>
      </inertial>
      <visual name='DVL_visual'>
        <pose frame=''>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://kraken_model/meshes/DVL.STL</uri>
          </mesh>
        </geometry>
        <material>
          <!--colour>
            <rgba>12 120 12 1</rgba>
          </colour-->
        </material>
      </visual>
      <collision name='DVL_collision'>
        <pose frame=''>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://kraken_model/meshes/DVL.STL</uri>
          </mesh>
        </geometry>
      </collision>
    </link>
    <joint name="joint_DVL" type="fixed">
      <parent>base_link</parent>
      <child>DVL</child>
      <pose frame=''>0 0 0 0 0 0</pose>
      <axis>
        <xyz>0 0 0</xyz>
      </axis>
    </joint>

    <link name='Imu'>
      <pose frame=''>0 0 0.44 0 0 0</pose>
      <inertial>
        <mass>0.000001</mass>
        <inertia>
          <ixx>0</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0</iyy>
          <iyz>0</iyz>
          <izz>0</izz>
        </inertia>
      </inertial>
      <visual name='Imu_visual'>
        <pose frame=''>0 0 0 0 0 0</pose>
        <geometry>
          <box>
            <size>0.01 0.01 0.01</size>
          </box>
        </geometry>
      </visual>
      <collision name='Imu_collision'>
        <pose frame=''>0 0 0 0 0 0</pose>
        <geometry>
          <box>
            <size>0.01 0.01 0.01</size>
          </box>
        </geometry>
      </collision>
      <sensor type="imu" name="Imu">
        <always_on>true</always_on>
        <update_rate>10</update_rate>
        <visualize>true</visualize>
        <!--topic>kraken_imu</topic-->
        <pose frame=''>0 0 0 0 0 0</pose>
        <imu>
          <!--topic>kraken_imu</topic-->
          <angular_velocity>
            <x>
              <noise type="none">
              </noise>
            </x>
            <y>
              <noise type="none">
              </noise>
            </y>
            <z>
              <noise type="none">
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="none">
              </noise>
            </x>
            <y>
              <noise type="none">
              </noise>
            </y>
            <z>
              <noise type="none">
              </noise>
            </z>
          </linear_acceleration>
        </imu>
        <plugin name="imu_plugin" filename="libgazebo_ros_imu_sensor.so">
          <alwaysOn>true</alwaysOn>
          <robotNamespace>kraken</robotNamespace>
          <topicName>imu</topicName>
          <frameName>Imu</frameName>
          <gaussianNoise>0</gaussianNoise>
          <updateRateHZ>10</updateRateHZ>
          <xyzOffset>0 0 0</xyzOffset>
          <rpyOffset>0 0 0</rpyOffset>
        </plugin>
      </sensor>

    </link>
    <joint name='joint_Imu' type="fixed">
      <parent>base_link</parent>
      <child>Imu</child>
      <pose frame=''>0 0 0 0 0 0</pose>
      <axis>
        <xyz>0 0 0</xyz>
      </axis>
    </joint>

    <plugin name="BuoyancyPlugin0" filename="libBuoyancyPlugin.so">
    <!-- a viscous liquid -->
      <fluid_density>80</fluid_density>
      <!--link name="base_link">
        <volume>0.000050</volume>
      </link-->
    </plugin>
    <plugin name="lifting_surface" filename="libLiftDragPlugin.so">
        <!-- taken from the lift curve figure -->
        <!-- alpha_0 is 5 degrees -->
        <a0>0</a0>
        <!-- alpha_stall is 19.3 degrees -->
        <alpha_stall>0.3368</alpha_stall>
        <!-- slope of the lift curve to the left of the stall angle -->
        <cla>1.418</cla>
        <!-- slope of the lift curve to the right of the stall angle -->
        <cla_stall>-1.1419</cla_stall>

        <!-- below are just random values in this example -->
        <cda>0.0</cda>
        <cda_stall>1.42</cda_stall>
        <cma>0.0</cma>
        <cma_stall>0.0</cma_stall>
        <area>3</area>
        <fluid_density>80</fluid_density>
        <forward>0 -0.7071067811865476 -0.7071067811865475</forward>
        <upward>0 0.7071067811865475 -0.7071067811865476</upward>
        <cp>0 0.35 0</cp>
      </plugin>
  </model>
</sdf>
